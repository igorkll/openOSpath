local function boot(address)
    local proxy = component.proxy(address)
    if proxy.type ~= "tape_drive" then
        error("this bootloader work only tape_drive")
    end
    if not proxy.isReady() then
        error("tape in not available")
    end
    local parts = {1}
    computer.getContent = function() proxy.stop() proxy.seek(-math.huge) return proxy.read(proxy.getSize()) end
    computer.getGlobalIndex = function(index) return parts[index] end
    computer.getPart = function(index) local data = computer.getContent() return data:match("[^\0]+", parts[index]) end
    computer.getBootAddress = function() return address end
    computer.setBootAddress = function() end
    do
        local data = computer.getContent()
        local next = 1
        while true do
            local nextByte = data:find("\0", next)
            next = nextByte + 1
            if next >= #data then
                break
            end
            parts[#parts + 1] = next
        end
    end
    return computer.getPart(1)
end
local address = ...
return boot(address)